{"version":3,"file":"static/js/837.d6251ce6.chunk.js","mappings":"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","sources":["modules/SuperAdmin/AllAdmin.tsx","../node_modules/@tanstack/react-query/src/useIsFetching.ts"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Space, Modal, Table, Popconfirm } from \"antd\";\r\nimport type { TablePaginationConfig, TableProps } from \"antd\";\r\nimport { useIsFetching } from \"@tanstack/react-query\";\r\nimport { useDeleteUser, useGetAllUsers } from \"../../hooks/auth\";\r\nimport eye from \"../../assets/Vector (3).png\";\r\nimport trash from \"../../assets/material-symbols_delete-outline.png\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { successAlert } from \"../../utils\";\r\nimport Pics from \"../../assets/fluent_weather-haze-24-filled (1).png\";\r\nimport LayoutSAdmin from \"../../layout/Super Admins\";\r\n\r\ninterface DataType {\r\n  key: string;\r\n  fullname: string;\r\n  address: string;\r\n  phone: string;\r\n  status: string;\r\n  email: string;\r\n  id: any;\r\n  _id: any;\r\n}\r\n\r\nconst AllAdmin = () => {\r\n  const { data: allAdmins } = useGetAllUsers();\r\n  const Admins = allAdmins?.filter((user: any) => user?.role === \"Admin\");\r\n\r\n  const loading = useIsFetching();\r\n  const [selectedUser, setSelectedUser] = React.useState<DataType | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [ModalOpen, setModalOpen] = React.useState(false);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n\r\n  const showPopconfirm = (record: DataType) => {\r\n    setSelectedUser(record);\r\n    setOpen(true);\r\n  };\r\n\r\n  const { mutate, isSuccess, reset } = useDeleteUser();\r\n  if (isSuccess) {\r\n    reset();\r\n    successAlert(\"User deleted successfully\");\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Modal control for Deleting user\r\n  const showModal = (record: DataType) => {\r\n    setSelectedUser(record);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setOpen(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    if (selectedUser) {\r\n      setOpen(false);\r\n      mutate(selectedUser?._id);\r\n    }\r\n  };\r\n\r\n  const showModals = (record: DataType) => {\r\n    setSelectedUser(record);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleOK = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const handleGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const columns: TableProps<DataType>[\"columns\"] = [\r\n    {\r\n      title: \"S/N\",\r\n      dataIndex: \"number\",\r\n      width: 80,\r\n      align: \"center\",\r\n      key: \"number\",\r\n      render: (text, record, index) => {\r\n        const pageNumber = tableProps.current || 1;\r\n        const pageSize = tableProps.pageSize || 5;\r\n        return (pageNumber - 1) * pageSize + index + 1;\r\n      },\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"fullname\",\r\n      key: \"fullname\",\r\n      render: (text) => (\r\n        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\r\n          {text}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      render: (text) => (\r\n        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\r\n          {text}\r\n        </div>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Actions\",\r\n      dataIndex: \"actions\",\r\n      align: \"left\",\r\n      width: 150,\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <img\r\n            src={eye}\r\n            alt=\"View\"\r\n            style={{ width: \"20px\", cursor: \"pointer\" }}\r\n            onClick={() => showModals(record)}\r\n          />\r\n          <img\r\n            src={trash}\r\n            alt=\"Delete\"\r\n            style={{ width: \"20px\", cursor: \"pointer\" }}\r\n            onClick={() => showPopconfirm(record)}\r\n          />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [tableProps, setTableProps] = useState<TablePaginationConfig>({\r\n    pageSize: 5,\r\n  });\r\n\r\n  const onChange: TableProps<DataType>[\"onChange\"] = (\r\n    pagination,\r\n    filters,\r\n    sorter,\r\n    extra\r\n  ) => {\r\n    setTableProps(pagination);\r\n  };\r\n\r\n  return (\r\n    <LayoutSAdmin Heading=\"All Admins\" Background={Pics}>\r\n      <div className=\"gap-4 mb-4 overflow-auto w-full\">\r\n        <Button\r\n          onClick={handleGoBack}\r\n          type=\"text\"\r\n          className=\"w-30 h-10 mb-4\"\r\n          style={{\r\n            background: \"#65812729\",\r\n            color: \"black\",\r\n            borderRadius: \"50px\",\r\n            boxShadow: \"none\",\r\n          }}\r\n        >\r\n          Back{\" \"}\r\n        </Button>\r\n        <Table\r\n          size=\"middle\"\r\n          columns={columns}\r\n          dataSource={Admins}\r\n          loading={!!loading}\r\n          rowKey=\"_id\"\r\n          onChange={onChange}\r\n          pagination={{\r\n            ...tableProps,\r\n            pageSizeOptions: [\"5\", \"10\", \"15\"],\r\n            showSizeChanger: false,\r\n          }}\r\n        />\r\n\r\n        <Modal\r\n          title=\"Are you sure?\"\r\n          open={open}\r\n          onOk={handleOk}\r\n          okButtonProps={{ loading: confirmLoading }}\r\n          onCancel={handleCancel}\r\n          width={400}\r\n          centered\r\n        >\r\n          <div className=\"mt-5 \">\r\n            <p className=\"mb-4\">\r\n              {\" \"}\r\n              Do you want to delete{\" \"}\r\n              <span style={{ fontWeight: \"bold\" }}>\r\n                {selectedUser?.fullname}?\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </Modal>\r\n        <div>\r\n          <Modal\r\n            title=\"View User\"\r\n            open={ModalOpen}\r\n            onOk={handleOK}\r\n            onCancel={handleClose}\r\n            width={500}\r\n            centered\r\n            footer={null}\r\n          >\r\n            <div\r\n              className=\"mt-6 grid sm:grid-cols-1 md:grid-cols-2 gap-6 w-full\"\r\n              style={{ marginBottom: \"3rem\", marginTop: \"3rem\" }}\r\n            >\r\n              <div className=\"mt-15 \">\r\n                <h5 className=\"mb-1 font-bold\">Full Name</h5>\r\n                <p className=\"mb-4\">{selectedUser?.fullname}</p>\r\n              </div>\r\n\r\n              <div className=\"sm:ml-8 mt-15\">\r\n                <h5 className=\"mb-1 font-bold\">Email Address</h5>\r\n                <p className=\"mb-4\">{selectedUser?.email}</p>\r\n              </div>\r\n\r\n              <div className=\"mt-15 \">\r\n                <h5 className=\"mb-1 font-bold\">Phone Number</h5>\r\n                <p className=\"mb-4\">{selectedUser?.phone || \"\"}</p>\r\n              </div>\r\n\r\n              <div className=\"sm:ml-8 mt-15\">\r\n                <h5 className=\"mb-1 font-bold\">Status</h5>\r\n                <p className=\"mb-4\">{selectedUser?.status}</p>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </LayoutSAdmin>\r\n  );\r\n};\r\n\r\nexport default AllAdmin;\r\n","'use client'\nimport * as React from 'react'\nimport { notifyManager, parseFilterArgs } from '@tanstack/query-core'\n\nimport { useSyncExternalStore } from './useSyncExternalStore'\nimport { useQueryClient } from './QueryClientProvider'\nimport type { ContextOptions } from './types'\nimport type { QueryFilters, QueryKey } from '@tanstack/query-core'\n\ninterface Options extends ContextOptions {}\n\nexport function useIsFetching(filters?: QueryFilters, options?: Options): number\nexport function useIsFetching(\n  queryKey?: QueryKey,\n  filters?: QueryFilters,\n  options?: Options,\n): number\nexport function useIsFetching(\n  arg1?: QueryKey | QueryFilters,\n  arg2?: QueryFilters | Options,\n  arg3?: Options,\n): number {\n  const [filters, options = {}] = parseFilterArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n  const queryCache = queryClient.getQueryCache()\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        queryCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [queryCache],\n    ),\n    () => queryClient.isFetching(filters),\n    () => queryClient.isFetching(filters),\n  )\n}\n"],"names":["AllAdmin","data","allAdmins","useGetAllUsers","Admins","filter","user","role","loading","useIsFetching","selectedUser","setSelectedUser","React","isModalOpen","setIsModalOpen","ModalOpen","setModalOpen","open","setOpen","confirmLoading","setConfirmLoading","mutate","isSuccess","reset","useDeleteUser","successAlert","navigate","useNavigate","columns","title","dataIndex","width","align","key","render","text","record","index","tableProps","current","pageSize","_jsx","style","height","display","alignItems","children","_","_jsxs","Space","size","src","eye","alt","cursor","onClick","showModals","trash","showPopconfirm","setTableProps","useState","LayoutSAdmin","Heading","Background","className","Button","handleGoBack","type","background","color","borderRadius","boxShadow","Table","dataSource","rowKey","onChange","pagination","filters","sorter","extra","pageSizeOptions","showSizeChanger","Modal","onOk","handleOk","setTimeout","_id","okButtonProps","onCancel","handleCancel","centered","fontWeight","fullname","handleOK","handleClose","footer","marginBottom","marginTop","email","phone","status","arg1","arg2","arg3","options","parseFilterArgs","queryCache","queryClient","getQueryCache","useSyncExternalStore","onStoreChange","subscribe","notifyManager","batchCalls","isFetching"],"sourceRoot":""}