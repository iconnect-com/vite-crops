{"version":3,"file":"static/js/7278.f46616d7.chunk.js","mappings":"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","sources":["hooks/auth/index.ts"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { getLoginToken, setLoginToken } from \"../../storage\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { userProps } from \"../../interface\";\r\nimport { errorAlert, successAlert, toastOptions } from \"../../utils\";\r\nimport { toast } from \"react-toastify\";\r\nimport { axiosInstance } from \"../../axios-Instance\";\r\nimport { queryKeys } from \"../../react-query/constants\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SERVER_ERROR = \"There was an error contacting the server.\";\r\n\r\nasync function userLogin(formData: userProps) {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/login\",\r\n    method: \"POST\",\r\n    data: formData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return data.data;\r\n}\r\n\r\nexport function useLogin() {\r\n  const authCtx = useContext(AuthContext);\r\n  return useMutation({\r\n    mutationFn: async (formData) => {\r\n      const data = await axiosInstance({\r\n        url: \"/auth/login\",\r\n        method: \"POST\",\r\n        data: formData,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      return data.data;\r\n    },\r\n    onSuccess: (data) => {\r\n      successAlert(\"Login Successful\");\r\n      setLoginToken(data.token);\r\n      authCtx.authenticate(data.token);\r\n    },\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n}\r\n\r\nasync function userRegister(formData: any) {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/user/create\",\r\n    method: \"POST\",\r\n    data: formData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useRegister() {\r\n  const navigate = useNavigate();\r\n  const { mutate, isError, error, isSuccess, reset } = useMutation({\r\n    mutationFn: (formData) => userRegister(formData as any),\r\n    onSuccess: (data) => {\r\n      navigate(`/login`);\r\n      successAlert(\"Registration Successful\");\r\n    },\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset };\r\n}\r\n\r\nasync function forgotPassword(formData: any) {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/forgotpassword\",\r\n    method: \"POST\",\r\n    data: formData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useForgotPassword() {\r\n  const navigate = useNavigate();\r\n  const { mutate, isError, error, isSuccess, reset } = useMutation({\r\n    mutationFn: (formData) => forgotPassword(formData as any),\r\n    onSuccess: (data) => {\r\n      navigate(`/login`);\r\n      successAlert(\"Check your Mailbox for instructions\");\r\n    },\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset };\r\n}\r\n\r\nasync function registerAdmin(formData: any) {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/admin/create\",\r\n    method: \"POST\",\r\n    data: formData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useRegisterAdmin() {\r\n  const navigate = useNavigate();\r\n  const { mutate, isError, error, isSuccess, reset } = useMutation({\r\n    mutationFn: (formData) => registerAdmin(formData as any),\r\n    onSuccess: (data) => {\r\n      successAlert(\"Admin Registration Successful\");\r\n      navigate(`/login`);\r\n    },\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset };\r\n}\r\n\r\nasync function updateMe(formData: any) {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/me\",\r\n    method: \"PUT\",\r\n    data: formData,\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useUpdateMe() {\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isError, error, isSuccess, reset, data } = useMutation({\r\n    mutationFn: (formData) => updateMe(formData as any),\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries([queryKeys.me]);\r\n    },\r\n\r\n    onError: (error) => {\r\n      errorAlert(error);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset, data };\r\n}\r\n\r\nasync function uploadProfile(id: any, formData: any) {\r\n  try {\r\n    const response = await axiosInstance.put(`/auth/${id}/photo`, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${getLoginToken()}`,\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error: any) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n}\r\n\r\nexport function useUploadProfile(id: any) {\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isError, error, isSuccess, reset, data } = useMutation({\r\n    mutationFn: (formData) => uploadProfile(id, formData),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries([queryKeys.user]);\r\n      successAlert(\"Profile picture uploaded Successful\");\r\n    },\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n\r\n  // Return a promise that resolves when the mutation is successful\r\n  const uploadProfilePromise = (formData: any) => {\r\n    return new Promise((resolve, reject) => {\r\n      mutate(formData, {\r\n        onSuccess: () => {\r\n          resolve(data);\r\n        },\r\n        onError: (error) => {\r\n          reject(error);\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  return {\r\n    mutate,\r\n    isError,\r\n    error,\r\n    isSuccess,\r\n    reset,\r\n    data,\r\n    uploadProfilePromise,\r\n  };\r\n}\r\n\r\nasync function getMe() {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/me\",\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useGetMe() {\r\n  const fallback = {};\r\n  const { data = fallback } = useQuery({\r\n    queryKey: [queryKeys.user],\r\n    queryFn: () => getMe(),\r\n    onSuccess: () => {},\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return data;\r\n}\r\n\r\nasync function deleteUser(id: any) {\r\n  const response = await axiosInstance({\r\n    url: `/auth/${id}`,\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n\r\n  return response?.data;\r\n}\r\n\r\nexport function useDeleteUser() {\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isError, error, isSuccess, reset } = useMutation({\r\n    mutationFn: (id) => deleteUser(id),\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries([queryKeys.users]);\r\n      successAlert(\"User Deleted Successfully\");\r\n      reset();\r\n    },\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset };\r\n}\r\n\r\nasync function changePassword(formData: any, id: any) {\r\n  const data = await axiosInstance({\r\n    url: `/auth/resetpassword/${id}`,\r\n    method: \"PUT\",\r\n    data: formData,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useChangePassword(id: any) {\r\n  const { mutate, isError, error, isSuccess, reset } = useMutation({\r\n    mutationFn: (formData) => changePassword(formData as any, id as any),\r\n    onSuccess: (data) => {\r\n      successAlert(\"Password Changed Successfully\");\r\n      reset();\r\n    },\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return { mutate, isError, error, isSuccess, reset };\r\n}\r\n\r\nasync function getAllUser() {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/user\",\r\n    method: \"GET\",\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useGetAllUsers() {\r\n  const fallback = {};\r\n  const { data = fallback } = useQuery({\r\n    queryKey: [queryKeys.users],\r\n    queryFn: () => getAllUser(),\r\n    onSuccess: () => {},\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return data;\r\n}\r\n\r\nasync function getRegUser() {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/GetRegisteredUser\",\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useGetRegisteredUsers() {\r\n  const fallback = {};\r\n  const { data = fallback } = useQuery({\r\n    queryKey: [queryKeys.usersRole],\r\n    queryFn: () => getRegUser(),\r\n    onSuccess: () => {},\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return data;\r\n}\r\n\r\nasync function getUserById(id: any) {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/:id\",\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n  return data?.data;\r\n}\r\n\r\nexport function useGetUserById(id: any) {\r\n  const fallback: any[] = [];\r\n  const { data = fallback } = useQuery({\r\n    queryKey: [queryKeys.user, id],\r\n    queryFn: () => getUserById(id),\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return data;\r\n}\r\n\r\nasync function getUser() {\r\n  const data = await axiosInstance({\r\n    url: \"/auth/user\",\r\n    method: \"GET\",\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useGetAllUser() {\r\n  const fallback = {};\r\n  const { data = fallback } = useQuery({\r\n    queryKey: [queryKeys.users],\r\n    queryFn: () => getUser(),\r\n    onSuccess: () => {},\r\n    onError: (error: any) => {\r\n      const err = error?.response?.data?.error\r\n        ? error?.response?.data?.error\r\n        : SERVER_ERROR;\r\n      toast.error(err, toastOptions);\r\n    },\r\n  });\r\n  return data;\r\n}\r\n\r\nasync function DelUserById(id: any) {\r\n  const data = await axiosInstance({\r\n    url: `/auth/${id}`,\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${getLoginToken()}`,\r\n    },\r\n  });\r\n\r\n  return data?.data;\r\n}\r\n\r\nexport function useDelUserById() {\r\n  const queryClient = useQueryClient();\r\n  const { mutate, isSuccess, reset, isError, error } = useMutation({\r\n    mutationFn: (id) => DelUserById(id),\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries([queryKeys.users]);\r\n    },\r\n  });\r\n  return { mutate, isSuccess, reset, isError, error };\r\n}\r\n\r\n// Api for conversion rate of currency\r\nasync function getExchangeRate(currencyCode = \"\") {\r\n  const response = await axios.get(\r\n    `https://v6.exchangerate-api.com/v6/${process.env.REACT_APP_CURRENCY_API_KEY}/latest/${currencyCode}`\r\n  );\r\n\r\n  return response.data;\r\n}\r\n\r\nexport function useGetExchangeRate(currencyCode: string) {\r\n  const fallback = {};\r\n  const { data = fallback, error } = useQuery(\r\n    [\"exchangeRate\", currencyCode],\r\n    () => getExchangeRate(currencyCode)\r\n  );\r\n\r\n  if (error) {\r\n    // Handle error here\r\n  }\r\n\r\n  return data;\r\n}\r\n"],"names":["SERVER_ERROR","useLogin","authCtx","useContext","AuthContext","useMutation","mutationFn","async","axiosInstance","url","method","data","formData","headers","onSuccess","successAlert","setLoginToken","token","authenticate","onError","error","_error$response","_error$response$data","_error$response2","_error$response2$data","err","response","toast","toastOptions","useRegister","navigate","useNavigate","mutate","isError","isSuccess","reset","userRegister","_error$response3","_error$response3$data","_error$response4","_error$response4$data","useForgotPassword","forgotPassword","_error$response5","_error$response5$data","_error$response6","_error$response6$data","useRegisterAdmin","registerAdmin","_error$response7","_error$response7$data","_error$response8","_error$response8$data","useUpdateMe","queryClient","useQueryClient","Authorization","concat","getLoginToken","updateMe","invalidateQueries","queryKeys","me","errorAlert","useUploadProfile","id","put","_error$response9","message","uploadProfile","user","_error$response10","_error$response10$dat","_error$response11","_error$response11$dat","uploadProfilePromise","Promise","resolve","reject","useGetMe","fallback","useQuery","queryKey","queryFn","getMe","_error$response12","_error$response12$dat","_error$response13","_error$response13$dat","useDeleteUser","deleteUser","users","_error$response14","_error$response14$dat","_error$response15","_error$response15$dat","useChangePassword","changePassword","_error$response16","_error$response16$dat","_error$response17","_error$response17$dat","useGetAllUsers","getAllUser","_error$response18","_error$response18$dat","_error$response19","_error$response19$dat","useGetRegisteredUsers","usersRole","getRegUser","_error$response20","_error$response20$dat","_error$response21","_error$response21$dat","useGetExchangeRate","currencyCode","arguments","length","undefined","axios","get","process","getExchangeRate"],"sourceRoot":""}