{"version":3,"file":"static/js/9977.fbb77185.chunk.js","mappings":"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","sources":["modules/User/Notification.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Tabs, Button, List, Modal } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useDeleteNotification } from \"../Admin/hooks\";\r\n\r\n// interface NotificationProps {\r\n//   message: string;\r\n//   notification: string;\r\n//   id?: string;\r\n//   _id?: string;\r\n//   key?: any;\r\n//   item?: any;\r\n// }\r\n\r\ninterface DataItem {\r\n  id: string;\r\n  title: string;\r\n  body: number;\r\n  status: string;\r\n}\r\n\r\nconst Notification = () => {\r\n  const initialData: DataItem[] = [\r\n    {\r\n      id: \"1\",\r\n      title: \"John Brown\",\r\n      body: 32,\r\n      status: \"New\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"Jim Green\",\r\n      body: 42,\r\n      status: \"Read\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"Joe Black\",\r\n      body: 32,\r\n      status: \"Read\",\r\n    },\r\n  ];\r\n\r\n  const { mutate: Delete } = useDeleteNotification();\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [deleteId, setDeleteId] = React.useState<string | null>(null);\r\n  const [notifications, setNotifications] = useState<DataItem[]>(initialData);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = (item: DataItem) => {\r\n    setVisible(true);\r\n    setDeleteId(item.id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (deleteId) {\r\n      // Delete(deleteId as string);\r\n    }\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    const updatedNotifications = notifications.map((notification) => {\r\n      if (notification.status === \"New\") {\r\n        return { ...notification, status: \"Read\" };\r\n      }\r\n      return notification;\r\n    });\r\n    setNotifications(updatedNotifications);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Layouts Heading=\"Notifications\" Background={backs}> */}\r\n      <Modal\r\n        title=\"Modal 1000px width\"\r\n        centered\r\n        open={open}\r\n        onOk={() => setOpen(false)}\r\n        onCancel={() => setOpen(false)}\r\n        width={1000}\r\n      >\r\n        <div className=\"flex justify-end\">\r\n          {\" \"}\r\n          <Button\r\n            style={{ backgroundColor: \"#65812729\", color: \"#658127\" }}\r\n            className=\"mb-4 text-sm sm:text-md\"\r\n            onClick={handleMarkAllAsRead}\r\n          >\r\n            Mark all as read\r\n          </Button>\r\n        </div>\r\n\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <Tabs.TabPane tab=\"All\" key=\"1\">\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={notifications}\r\n              renderItem={(item) => (\r\n                <List.Item\r\n                  actions={[\r\n                    <Button\r\n                      onClick={() => handleOpen(item)}\r\n                      style={{ backgroundColor: \"#E3362930\", color: \"#E33629\" }}\r\n                      icon={<DeleteOutlined />}\r\n                    >\r\n                      Delete\r\n                    </Button>,\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta title={item.title} description={item.body} />\r\n                </List.Item>\r\n              )}\r\n            />{\" \"}\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab=\"New\" key=\"2\">\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={notifications.filter((item) => item.status === \"New\")}\r\n              renderItem={(item) => (\r\n                <List.Item\r\n                  actions={[\r\n                    <Button\r\n                      onClick={() => handleOpen(item)}\r\n                      style={{ backgroundColor: \"#E3362930\", color: \"#E33629\" }}\r\n                      icon={<DeleteOutlined />}\r\n                    >\r\n                      Delete\r\n                    </Button>,\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta title={item.title} description={item.body} />\r\n                </List.Item>\r\n              )}\r\n            />{\" \"}\r\n          </Tabs.TabPane>\r\n          <Tabs.TabPane tab=\"Read\" key=\"3\">\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={notifications.filter(\r\n                (item) => item.status === \"Read\"\r\n              )}\r\n              renderItem={(item) => (\r\n                <List.Item\r\n                  actions={[\r\n                    <Button\r\n                      onClick={() => handleOpen(item)}\r\n                      style={{ backgroundColor: \"#E3362930\", color: \"#E33629\" }}\r\n                      icon={<DeleteOutlined />}\r\n                    >\r\n                      Delete\r\n                    </Button>,\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta title={item.title} description={item.body} />\r\n                </List.Item>\r\n              )}\r\n            />{\" \"}\r\n          </Tabs.TabPane>\r\n        </Tabs>\r\n\r\n        <Modal\r\n          title=\"Delete Notification\"\r\n          open={visible}\r\n          onOk={handleDelete}\r\n          onCancel={handleClose}\r\n          okButtonProps={{\r\n            // loading: confirmLoading,\r\n            className: \"!bg-[#39462D]\",\r\n          }}\r\n        />\r\n      </Modal>\r\n\r\n      {/* </Layouts> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n"],"names":["Notification","mutate","Delete","useDeleteNotification","visible","setVisible","React","deleteId","setDeleteId","notifications","setNotifications","useState","id","title","body","status","open","setOpen","handleOpen","item","_jsx","children","_jsxs","Modal","centered","onOk","onCancel","width","className","Button","style","backgroundColor","color","onClick","handleMarkAllAsRead","updatedNotifications","map","notification","Tabs","defaultActiveKey","TabPane","tab","List","itemLayout","dataSource","renderItem","Item","actions","icon","DeleteOutlined","Meta","description","filter","handleDelete","handleClose","okButtonProps"],"sourceRoot":""}