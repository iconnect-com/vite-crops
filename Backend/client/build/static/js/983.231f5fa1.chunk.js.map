{"version":3,"file":"static/js/983.231f5fa1.chunk.js","mappings":"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","sources":["modules/Auth/Admin/NewPassword.tsx","modules/Auth/Admin/components/AuthWrapperAdmin.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useChangePassword } from \"../../../hooks/auth\";\r\nimport nirsal from \"../../../assets/download.jpeg\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { AuthWrapperAdmin } from \"./components/AuthWrapperAdmin\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\ninterface FormData {\r\n  // currentPassword: string;\r\n  password: string;\r\n}\r\n\r\nconst NewPassword = () => {\r\n  const { id } = useParams();\r\n  const { mutate } = useChangePassword(id);\r\n  const isLoading = useIsMutating();\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState<FormData>({\r\n    password: \"\",\r\n    // newPassword: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleValidation = async () => {\r\n    try {\r\n      await form.validateFields();\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const isValid = await handleValidation();\r\n    if (isValid) {\r\n      form.submit();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AuthWrapperAdmin>\r\n        <div className=\"flex-1 flex items-center justify-center\">\r\n          <Form\r\n            name=\"login\"\r\n            onFinish={(values) => {\r\n              mutate(values, {\r\n                onSuccess: () => {\r\n                  form.resetFields();\r\n                  navigate(\"/login\");\r\n                },\r\n              });\r\n            }}\r\n            className=\"bg-white p-10 w-full ml-5 mr-5 sm:ml-20 sm:mr-20\"\r\n            form={form}\r\n            variant=\"borderless\"\r\n            layout=\"vertical\"\r\n            size=\"large\"\r\n          >\r\n            <div className=\"\">\r\n              <div className=\"\">\r\n                <Link to=\"/\">\r\n                  <img className=\"h-12 w-17\" src={nirsal} alt=\"ChitChat Logo\" />\r\n                </Link>{\" \"}\r\n              </div>{\" \"}\r\n            </div>\r\n\r\n            <div className=\"text-2xl mt-8 mb-1 font-bold text-black\">\r\n              New Password{\" \"}\r\n            </div>\r\n            <div className=\"text-sm mb-10 font-medium text-black\">\r\n              Kindly use a combination unique to you\r\n            </div>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              label=\"New Password\"\r\n              rules={[{ required: true, message: \"Please input a password!\" }]}\r\n            >\r\n              <Input.Password\r\n                className=\"border-gray-300 rounded-none\"\r\n                name=\"password\"\r\n                onChange={handleInputChange}\r\n                style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n              />\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item\r\n              name=\"newPassword\"\r\n              label=\"Confirm Password\"\r\n              rules={[\r\n                { required: true, message: \"Please repeat the password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                className=\"border-gray-300 rounded-none\"\r\n                name=\"newPassword\"\r\n                onChange={handleInputChange}\r\n                style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n              />\r\n            </Form.Item> */}\r\n\r\n            <Button\r\n              onClick={handleSubmit}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"w-full h-10 rounded bg-blue-500 hover:text-black hover:bg-white text-sm\"\r\n              style={{\r\n                background:\r\n                  \"linear-gradient(89.46deg, #39462D 13.05%, #658127 107.23%)\",\r\n                color: \"white\",\r\n              }}\r\n              loading={isLoading > 0}\r\n            >\r\n              Submit{\" \"}\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </AuthWrapperAdmin>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n","import React, { ReactNode, useEffect, useState } from \"react\";\r\nimport bg1 from \"../../../../assets/Frame-1.png\";\r\nimport bg2 from \"../../../../assets/Frame-2.png\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const AuthWrapperAdmin = ({ children }: Props) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const images = [bg1, bg2];\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentImageIndex((currentImageIndex + 1) % images.length);\r\n    }, 30000);\r\n\r\n    return () => clearInterval(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentImageIndex]);\r\n\r\n  const [isLargeScreen, setIsLargeScreen] = useState(window.innerWidth > 768);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsLargeScreen(window.innerWidth > 560);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex\">\r\n      {children}\r\n      {isLargeScreen && (\r\n        <div className=\"flex-1 relative hidden md:block\">\r\n          <img\r\n            src={images[currentImageIndex]}\r\n            alt=\"Background\"\r\n            className=\"absolute inset-0 w-full h-full object-cover\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["NewPassword","id","useParams","mutate","useChangePassword","isLoading","useIsMutating","form","Form","useForm","navigate","useNavigate","formData","setFormData","useState","password","_jsx","_Fragment","children","AuthWrapperAdmin","className","_jsxs","name","onFinish","values","onSuccess","resetFields","variant","layout","size","Link","to","src","nirsal","alt","Item","label","rules","required","message","Input","Password","onChange","e","value","target","style","backgroundColor","marginTop","Button","onClick","async","preventDefault","validateFields","error","handleValidation","submit","type","htmlType","background","color","loading","_ref","currentImageIndex","setCurrentImageIndex","images","bg1","bg2","useEffect","intervalId","setInterval","length","clearInterval","isLargeScreen","setIsLargeScreen","window","innerWidth","handleResize","addEventListener","removeEventListener"],"sourceRoot":""}