{"version":3,"file":"static/js/6191.0aeb37b8.chunk.js","mappings":"gSAYA,MAgGA,EAhGsBA,KACpB,MAAM,OAAEC,EAAM,UAAEC,EAAS,MAAEC,IAAUC,EAAAA,EAAAA,MAC/BC,GAAYC,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,OAEVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAmB,CACjDC,MAAO,MAOFC,GAAQC,EAAAA,EAAKC,UAoBpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CAAAC,UACfF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,0CAAyCD,UACtDE,EAAAA,EAAAA,MAACN,EAAAA,EAAI,CACHO,KAAK,gBACLC,SAAWC,IACTtB,EAAOsB,EAAQ,CACbC,UAAWA,KACTX,EAAKY,aAAa,GAEpB,EAEJN,UAAU,4DACVN,KAAMA,EACNa,QAAQ,aACRC,OAAO,WAAUT,SAAA,EAEjBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EACfF,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAG,IAAGX,UACVF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAYW,IAAKC,EAAQC,IAAI,oBACtC,QAGVZ,EAAAA,EAAAA,MAAA,OAAKD,UAAU,0CAAyCD,SAAA,CAAC,iBACxC,QAEjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uCAAsCD,SAAC,0DAItDF,EAAAA,EAAAA,KAACF,EAAAA,EAAKmB,KAAI,CACRZ,KAAK,QACLa,MAAM,QACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,6BAA8BnB,UAEjEF,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,CACJnB,UAAU,+BACVE,KAAK,QACLkB,SA9DeC,IACzB,MAAM,KAAEnB,EAAI,MAAEoB,GAAUD,EAAEE,OAC1BhC,EAAY,IAAKD,EAAU,CAACY,GAAOoB,GAAQ,EA6DjCE,MAAO,CAAEC,gBAAiB,UAAWC,UAAW,cAIpDzB,EAAAA,EAAAA,MAAC0B,EAAAA,GAAM,CACLC,QArDWC,UACnBR,EAAES,sBAVqBD,WACvB,IAEE,aADMnC,EAAKqC,kBACJ,CACT,CAAE,MAAOC,GACP,OAAO,CACT,GAKsBC,KAEpBvC,EAAKwC,SACL9C,EAAS,KACX,EAgDQ+C,KAAK,UACLC,SAAS,SACTpC,UAAU,0EACVwB,MAAO,CACLa,WACE,6DACFC,MAAO,SAETC,QAASrD,EAAY,EAAEa,SAAA,CACxB,SACQ,aAII,C,mLChGhB,MAAMD,EAAmB0C,IAA0B,IAAzB,SAAEzC,GAAiByC,EAClD,MAAOC,EAAmBC,IAAwBlD,EAAAA,EAAAA,UAAS,GACrDmD,EAAS,CAACC,EAAKC,IAErBC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaC,aAAY,KAC7BN,GAAsBD,EAAoB,GAAKE,EAAOM,OAAO,GAC5D,KAEH,MAAO,IAAMC,cAAcH,EAAW,GAErC,CAACN,IAEJ,MAAOU,EAAeC,IAAoB5D,EAAAA,EAAAA,UAAS6D,OAAOC,WAAa,KAYvE,OAXAR,EAAAA,EAAAA,YAAU,KACR,MAAMS,EAAeA,KACnBH,EAAiBC,OAAOC,WAAa,IAAI,EAI3C,OADAD,OAAOG,iBAAiB,SAAUD,GAC3B,KACLF,OAAOI,oBAAoB,SAAUF,EAAa,CACnD,GACA,KAGDtD,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oBAAmBD,SAAA,CAC/BA,EACAoD,IACCtD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kCAAiCD,UAC9CF,EAAAA,EAAAA,KAAA,OACEc,IAAKgC,EAAOF,GACZ5B,IAAI,aACJb,UAAU,oDAIZ,C","sources":["modules/Auth/Admin/ResetPassword.tsx","modules/Auth/Admin/components/AuthWrapperAdmin.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useForgotPassword } from \"../../../hooks/auth\";\r\nimport nirsal from \"../../../assets/download.jpeg\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { AuthWrapperAdmin } from \"./components/AuthWrapperAdmin\";\r\n// import { GoogleLogin } from 'react-google-login';\r\n\r\ninterface FormData {\r\n  email: string;\r\n}\r\nconst ResetPassword = () => {\r\n  const { mutate, isSuccess, reset } = useForgotPassword();\r\n  const isLoading = useIsMutating();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState<FormData>({\r\n    email: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const [form] = Form.useForm();\r\n\r\n  const handleValidation = async () => {\r\n    try {\r\n      await form.validateFields();\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const isValid = await handleValidation();\r\n    if (isValid) {\r\n      form.submit();\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthWrapperAdmin>\r\n      <div className=\"flex-1 flex items-center justify-center\">\r\n        <Form\r\n          name=\"Rest Password\"\r\n          onFinish={(values) => {\r\n            mutate(values, {\r\n              onSuccess: () => {\r\n                form.resetFields();\r\n              },\r\n            });\r\n          }}\r\n          className=\"flex-col bg-white p-10 w-full ml-5 mr-5 sm:ml-20 sm:mr-20\"\r\n          form={form}\r\n          variant=\"borderless\"\r\n          layout=\"vertical\"\r\n        >\r\n          <div className=\"\">\r\n            <Link to=\"/\">\r\n              <img className=\"h-12 w-17\" src={nirsal} alt=\"ChitChat Logo\" />\r\n            </Link>{\" \"}\r\n          </div>\r\n\r\n          <div className=\"text-2xl mt-8 mb-1 font-bold text-black\">\r\n            Reset Password{\" \"}\r\n          </div>\r\n          <div className=\"text-sm mb-10 font-medium text-black\">\r\n            Kindly input your email, let's get you back on track\r\n          </div>\r\n\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n          >\r\n            <Input\r\n              className=\"border-gray-300 rounded-none\"\r\n              name=\"email\"\r\n              onChange={handleInputChange}\r\n              style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Button\r\n            onClick={handleSubmit}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"w-full h-10 rounded bg-blue-500 hover:text-black hover:bg-white text-sm\"\r\n            style={{\r\n              background:\r\n                \"linear-gradient(89.46deg, #39462D 13.05%, #658127 107.23%)\",\r\n              color: \"white\",\r\n            }}\r\n            loading={isLoading > 0}\r\n          >\r\n            Submit{\" \"}\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </AuthWrapperAdmin>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React, { ReactNode, useEffect, useState } from \"react\";\r\nimport bg1 from \"../../../../assets/Frame-1.png\";\r\nimport bg2 from \"../../../../assets/Frame-2.png\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const AuthWrapperAdmin = ({ children }: Props) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const images = [bg1, bg2];\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentImageIndex((currentImageIndex + 1) % images.length);\r\n    }, 30000);\r\n\r\n    return () => clearInterval(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentImageIndex]);\r\n\r\n  const [isLargeScreen, setIsLargeScreen] = useState(window.innerWidth > 768);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsLargeScreen(window.innerWidth > 560);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex\">\r\n      {children}\r\n      {isLargeScreen && (\r\n        <div className=\"flex-1 relative hidden md:block\">\r\n          <img\r\n            src={images[currentImageIndex]}\r\n            alt=\"Background\"\r\n            className=\"absolute inset-0 w-full h-full object-cover\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["ResetPassword","mutate","isSuccess","reset","useForgotPassword","isLoading","useIsMutating","navigate","useNavigate","formData","setFormData","useState","email","form","Form","useForm","_jsx","AuthWrapperAdmin","children","className","_jsxs","name","onFinish","values","onSuccess","resetFields","variant","layout","Link","to","src","nirsal","alt","Item","label","rules","required","message","Input","onChange","e","value","target","style","backgroundColor","marginTop","Button","onClick","async","preventDefault","validateFields","error","handleValidation","submit","type","htmlType","background","color","loading","_ref","currentImageIndex","setCurrentImageIndex","images","bg1","bg2","useEffect","intervalId","setInterval","length","clearInterval","isLargeScreen","setIsLargeScreen","window","innerWidth","handleResize","addEventListener","removeEventListener"],"sourceRoot":""}