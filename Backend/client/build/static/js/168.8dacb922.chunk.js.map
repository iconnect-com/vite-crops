{"version":3,"file":"static/js/168.8dacb922.chunk.js","mappings":"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","sources":["modules/Admin/Configuration/forms/components/EditNewForm.tsx","modules/Admin/Configuration/forms/EditNews.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Form, Input, Button, Upload } from \"antd\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useUpdateNews } from \"../../../hooks\";\r\nimport { decode } from \"html-entities\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface FormData {\r\n  title: string;\r\n  description: string;\r\n  image: any;\r\n}\r\n\r\ninterface NewsRecord {\r\n  _id: string;\r\n  title: string;\r\n  description: string;\r\n  image: string;\r\n  data: any[];\r\n}\r\n\r\ninterface EditNewsFormProps {\r\n  data: NewsRecord;\r\n  id: string;\r\n  innerHTML: any[];\r\n}\r\n\r\nconst EditNewsForm = ({ data }: EditNewsFormProps) => {\r\n  const isLoading = useIsMutating();\r\n  const { id } = useParams();\r\n\r\n  const decodedHtml = decode(data?.description || \"\");\r\n\r\n  const { mutate } = useUpdateNews(id as any);\r\n  const [form] = Form.useForm();\r\n  const [files, setFiles] = useState<string | null>(null);\r\n  const [previewImage, setPreviewImage] = useState<string | null>(data.image);\r\n  const [imageFile, setImageFile] = useState<File | null>(null);\r\n  const [values, setValues] = useState(decodedHtml);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      form.setFieldsValue(data);\r\n    }\r\n  }, [data, form]);\r\n\r\n  // Calling the Quill editor to Convert HTML to Delta\r\n  const quillRef = useRef<ReactQuill>(null);\r\n  useEffect(() => {\r\n    if (quillRef.current) {\r\n      const quillInstance = quillRef.current.getEditor();\r\n      const delta = quillInstance.clipboard.convert(decodedHtml);\r\n      quillInstance.setContents(delta);\r\n    }\r\n  }, [decodedHtml]);\r\n\r\n  const handleFileChange = (info: any) => {\r\n    const file = info.file;\r\n    setFiles(file);\r\n    if (info.fileList.length > 0) {\r\n      const file = info.fileList[0].originFileObj;\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          setPreviewImage(e.target?.result as string);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        setPreviewImage(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const [formData, setFormData] = useState<FormData>({\r\n    title: \"\",\r\n    description: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleQuillChange = (content: string) => {\r\n    setFormData({ ...formData, description: content });\r\n    setValues(content);\r\n  };\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    multiple: false,\r\n    beforeUpload: () => false,\r\n    fileList: [],\r\n    onChange: handleFileChange,\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"title\", form.getFieldValue(\"title\"));\r\n    data.append(\"description\", form.getFieldValue(\"description\"));\r\n    if (imageFile) {\r\n      data.append(\"image\", imageFile);\r\n    }\r\n    mutate(data as any, {\r\n      onSuccess: () => {\r\n        form.resetFields();\r\n        setPreviewImage(null);\r\n        setImageFile(null);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"justify-center items-center flex flex-col sm:flex-row py-3 h-full\">\r\n      <div>\r\n        <Form\r\n          form={form}\r\n          variant=\"borderless\"\r\n          layout=\"vertical\"\r\n          requiredMark={false}\r\n          size=\"large\"\r\n          name=\"commodity-form\"\r\n          className=\"flex-col sm:flex-row w-[250px] lg:w-[1000px] md:w-full sm:w-full\"\r\n        >\r\n          <div className=\"flex justify-end mb-2 mt-10\"></div>\r\n          <div\r\n            className=\"gap-6 flex flex-col sm:flex-row\"\r\n            style={{ marginBottom: \"-3rem\", marginTop: \"-2rem\" }}\r\n          >\r\n            <div className=\"flex-col\" style={{ flex: 1 }}>\r\n              <Form.Item\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                rules={[{ required: true, message: \"Please enter a title\" }]}\r\n              >\r\n                <Input\r\n                  className=\"w-full\"\r\n                  name=\"title\"\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    backgroundColor: \"#EBE9E9\",\r\n                    marginTop: \"-2rem\",\r\n                    borderRadius: 0,\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                rules={[\r\n                  { required: true, message: \"Please enter a description\" },\r\n                ]}\r\n              >\r\n                <ReactQuill\r\n                  ref={quillRef}\r\n                  className=\" w-full h-[140px]\"\r\n                  theme=\"snow\"\r\n                  value={values}\r\n                  onChange={handleQuillChange}\r\n                  style={{\r\n                    backgroundColor: \"#EBE9E9\",\r\n                    marginTop: \"-1rem\",\r\n                    borderRadius: 0,\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n\r\n            <div className=\"flex-col\" style={{ flex: 1 }}>\r\n              <Form.Item\r\n                name=\"image\"\r\n                label=\"Image\"\r\n                rules={[{ required: true, message: \"Please upload an image\" }]}\r\n              >\r\n                <Upload.Dragger {...props}>\r\n                  {previewImage ? (\r\n                    <img\r\n                      src={previewImage}\r\n                      alt=\"Preview\"\r\n                      style={{ width: \"250%\", height: \"250px\" }}\r\n                    />\r\n                  ) : (\r\n                    <>\r\n                      <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined />\r\n                      </p>\r\n                      <p className=\"ant-upload-text\">\r\n                        Click or drag file to this area to upload\r\n                      </p>\r\n                      <p className=\"text-sm px-10\">\r\n                        Support for a single or bulk upload. Strictly prohibited\r\n                        from uploading company data or other banned files.\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                </Upload.Dragger>\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end py-20 \">\r\n            <Form.Item>\r\n              <Button\r\n                name=\"submit\"\r\n                type=\"text\"\r\n                htmlType=\"submit\"\r\n                onClick={handleSubmit}\r\n                className=\"w-30 ml-6 rounded bg-blue-500 hover:text-black hover:bg-white text-sm\"\r\n                style={{\r\n                  background:\r\n                    \"linear-gradient(89.46deg, #39462D 13.05%, #658127 107.23%)\",\r\n                  color: \"white\",\r\n                }}\r\n                loading={isLoading > 0}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>\r\n            </Form.Item>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditNewsForm;\r\n","import React from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport AdminLayout from \"../../../../layout/Admins\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { Button } from \"antd\";\r\nimport EditNewsForm from \"./components/EditNewForm\";\r\n\r\nconst EditNews = () => {\r\n  const navigate = useNavigate();\r\n  const handleGoBack = () => {\r\n    navigate(-1);\r\n  };\r\n  const location = useLocation();\r\n  const data = location.state;\r\n  const NewsRecord = data.record;\r\n\r\n  return (\r\n    <AdminLayout pageTitle=\"Configuration\">\r\n      <div>\r\n        <Button\r\n          onClick={handleGoBack}\r\n          type=\"text\"\r\n          className=\"w-30 h-10 mb-6\"\r\n          style={{\r\n            background: \"#65812729\",\r\n            color: \"black\",\r\n            borderRadius: \"50px\",\r\n            boxShadow: \"none\",\r\n          }}\r\n        >\r\n          Back{\" \"}\r\n        </Button>\r\n\r\n        <div className=\"bg-[#FFFFFF] w-full flex-row\">\r\n          <EditNewsForm data={NewsRecord} id={\"\"} innerHTML={[]} />\r\n        </div>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default EditNews;\r\n"],"names":["_ref","data","isLoading","useIsMutating","id","useParams","decodedHtml","decode","description","mutate","useUpdateNews","form","Form","useForm","files","setFiles","useState","previewImage","setPreviewImage","image","imageFile","setImageFile","values","setValues","useEffect","setFieldsValue","quillRef","useRef","current","quillInstance","getEditor","delta","clipboard","convert","setContents","formData","setFormData","title","props","name","multiple","beforeUpload","fileList","onChange","info","file","length","originFileObj","reader","FileReader","onload","e","_e$target","target","result","readAsDataURL","_jsx","className","children","_jsxs","variant","layout","requiredMark","size","style","marginBottom","marginTop","flex","Item","label","rules","required","message","Input","value","backgroundColor","borderRadius","ReactQuill","ref","theme","content","Upload","Dragger","src","alt","width","height","_Fragment","InboxOutlined","Button","type","htmlType","onClick","preventDefault","FormData","append","getFieldValue","onSuccess","resetFields","background","color","loading","EditNews","navigate","useNavigate","NewsRecord","useLocation","state","record","AdminLayout","pageTitle","handleGoBack","boxShadow","EditNewsForm","innerHTML"],"sourceRoot":""}