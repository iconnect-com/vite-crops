{"version":3,"file":"static/js/2882.f0e6719a.chunk.js","mappings":"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","sources":["modules/Auth/User/Registration.tsx","modules/Auth/User/components/AuthWrapper.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useRegister } from \"../../../hooks/auth\";\r\nimport nirsal from \"../../../assets/download.jpeg\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { AuthWrapper } from \"./components/AuthWrapper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface FormData {\r\n  password: string;\r\n  confirmPassword: string;\r\n  fullname: string;\r\n  email: string;\r\n}\r\n\r\nconst Registration = () => {\r\n  const { mutate } = useRegister();\r\n  const isLoading = useIsMutating();\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values: FormData) => {\r\n    mutate(values as any);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AuthWrapper>\r\n        <div className=\"flex items-center justify-center w-[750px]\">\r\n          <Form\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            className=\"bg-white p-7 sm:shadow-md w-full\"\r\n            form={form}\r\n            layout=\"vertical\"\r\n          >\r\n            <div className=\"\">\r\n              <Link to=\"/\">\r\n                <img className=\"h-12 w-17\" src={nirsal} alt=\"ChitChat Logo\" />\r\n              </Link>{\" \"}\r\n            </div>\r\n\r\n            <div className=\"text-2xl mt-8 mb-1 font-bold text-black\">\r\n              Sign up{\" \"}\r\n            </div>\r\n            <div className=\"text-sm mb-5 font-medium text-black\">\r\n              This wonâ€™t take long{\" \"}\r\n            </div>\r\n\r\n            <div className=\"justify-center items-center mt-4 grid md:grid-cols-2 grid-cols-1 gap-4 w-full\">\r\n              <Form.Item\r\n                name=\"fullname\"\r\n                label=\"Fullname\"\r\n                rules={[{ required: true, message: \"Please input a name!\" }]}\r\n              >\r\n                <Input className=\"border-gray-300 rounded-none w-full bg-[#EBE9E9]\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                rules={[\r\n                  { required: true, message: \"Please input a valid email!\" },\r\n                  {\r\n                    pattern: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\r\n                    message: \"Please input a valid email!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  className=\"border-gray-300 rounded-none w-full bg-[#EBE9E9]\"\r\n                  name=\"email\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                  { required: true, message: \"Please input a password!\" },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  className=\"border-gray-300 rounded-none w-full bg-[#EBE9E9]\"\r\n                  name=\"password\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input same password again!\",\r\n                  },\r\n                  {\r\n                    validator(rule, value, callback) {\r\n                      return new Promise((resolve, reject) => {\r\n                        if (value === form.getFieldValue(\"password\")) {\r\n                          resolve(\"\");\r\n                        } else {\r\n                          reject(\"Passwords must match\");\r\n                        }\r\n                      });\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  className=\"border-gray-300 rounded-none w-full bg-[#EBE9E9]\"\r\n                  name=\"confirmPassword\"\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center mt-4\">\r\n              <div className=\"flex flex-row mb-8\">\r\n                <span className=\"mb-5 text-sm text-gray-500\">\r\n                  Already have an account?{\" \"}\r\n                </span>\r\n                <a\r\n                  href=\"/login\"\r\n                  className=\"ml-1 mr-1 text-green-900 text-sm font-bold hover:text-black\"\r\n                >\r\n                  Log in{\" \"}\r\n                </a>\r\n              </div>\r\n\r\n              <Button\r\n                name=\"email\"\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"w-40 mb-5 h-10 rounded bg-blue-500 hover:text-black hover:bg-white text-sm\"\r\n                style={{\r\n                  background:\r\n                    \"linear-gradient(89.46deg, #39462D 13.05%, #658127 107.23%)\",\r\n                  color: \"white\",\r\n                }}\r\n                loading={Boolean(isLoading)}\r\n              >\r\n                Submit{\" \"}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </AuthWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import React, { ReactNode, useEffect, useState } from \"react\";\r\nimport bg1 from \"../../../../assets/country-side.jpg\";\r\nimport bg2 from \"../../../../assets/harvesting-wheat.jpg\";\r\nimport bg3 from \"../../../../assets/sunset-rural-farm.jpg\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const AuthWrapper = ({ children }: Props) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const images = [bg1, bg2, bg3];\r\n  const [isSmallScreen, setIsSmallScreen] = useState(window.innerWidth < 640);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentImageIndex((currentImageIndex + 1) % images.length);\r\n    }, 30000);\r\n\r\n    return () => clearInterval(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentImageIndex]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsSmallScreen(window.innerWidth < 640);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen flex items-center justify-center bg-cover bg-center\"\r\n      style={\r\n        isSmallScreen\r\n          ? {}\r\n          : { backgroundImage: `url(${images[currentImageIndex]})` }\r\n      }\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["Registration","mutate","useRegister","isLoading","useIsMutating","form","Form","useForm","_jsx","_Fragment","children","AuthWrapper","className","_jsxs","name","onFinish","values","layout","Link","to","src","nirsal","alt","Item","label","rules","required","message","Input","pattern","Password","validator","rule","value","callback","Promise","resolve","reject","getFieldValue","href","Button","type","htmlType","style","background","color","loading","Boolean","_ref","currentImageIndex","setCurrentImageIndex","useState","images","bg1","bg2","bg3","isSmallScreen","setIsSmallScreen","window","innerWidth","useEffect","intervalId","setInterval","length","clearInterval","handleResize","addEventListener","removeEventListener","backgroundImage","concat"],"sourceRoot":""}