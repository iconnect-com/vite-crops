{"version":3,"file":"static/js/7396.232d6bbe.chunk.js","mappings":"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","sources":["components/Calendar/index.tsx","modules/Admin/Dashboard/components/TableComponent.tsx","modules/Admin/Dashboard/components/DashboardPage.tsx","modules/Admin/index.tsx"],"sourcesContent":["import type { Dayjs } from \"dayjs\";\r\nimport React from \"react\";\r\nimport { Calendar, theme } from \"antd\";\r\nimport type { CalendarProps } from \"antd\";\r\n\r\nconst onPanelChange = (value: Dayjs, mode: CalendarProps<Dayjs>[\"mode\"]) => {};\r\n\r\nconst Calendars: React.FC = () => {\r\n  const { token } = theme.useToken();\r\n\r\n  const wrapperStyle: React.CSSProperties = {\r\n    width: \"100%\", // default to full width\r\n    maxWidth: \"450px\", // limit maximum width to 450px\r\n    border: `1px solid ${token.colorBorderSecondary}`,\r\n    borderRadius: token.borderRadiusLG,\r\n  };\r\n\r\n  return (\r\n    <div style={wrapperStyle}>\r\n      <Calendar fullscreen={false} onPanelChange={onPanelChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendars;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Space,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  Tag,\r\n  DatePicker,\r\n  TimePicker,\r\n} from \"antd\";\r\nimport type {\r\n  DatePickerProps,\r\n  TableColumnsType,\r\n  TablePaginationConfig,\r\n  TableProps,\r\n} from \"antd\";\r\nimport eye from \"../../../../assets/Vector (3).png\";\r\nimport trash from \"../../../../assets/material-symbols_delete-outline.png\";\r\nimport { useIsFetching, useIsMutating } from \"@tanstack/react-query\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  useDeleteConfiguration,\r\n  useGetConfiguration,\r\n  useUpdateCommodityPrice,\r\n} from \"../../hooks\";\r\nimport type { TimePickerProps } from \"antd\";\r\nimport { Dayjs } from \"dayjs\";\r\nimport { successAlert } from \"../../../../utils\";\r\n\r\ninterface FormData {\r\n  commodity: any;\r\n  previous_price: string;\r\n  new_price: string;\r\n  effective_date: string;\r\n  effective_time: string;\r\n  reason_for_change: string;\r\n  tags: string[];\r\n  name: any;\r\n}\r\ninterface DataType {\r\n  key: any;\r\n  status: string;\r\n  name: any;\r\n  commodity: any;\r\n  new_price: string;\r\n  current_price: string;\r\n  previous_price: any;\r\n  effective_date: any;\r\n  effective_time: string;\r\n  reason_for_change: string;\r\n  tags: string[];\r\n  dateString: any;\r\n  id: any;\r\n  _id: any;\r\n}\r\ntype PickerType = \"time\" | \"date\";\r\n\r\nconst TableComponent = () => {\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const [configuration, setConfiguration] = React.useState<DataType | null>(\r\n    null\r\n  );\r\n  const { mutate } = useUpdateCommodityPrice(configuration?._id);\r\n  const { mutate: Delete } = useDeleteConfiguration();\r\n  const { data: MarketPrices } = useGetConfiguration();\r\n\r\n  React.useEffect(() => {\r\n    if (MarketPrices) {\r\n      const mapped = MarketPrices.map((item: any, index: any) => ({\r\n        ...item,\r\n        index,\r\n      }));\r\n      setMappedData(mapped);\r\n      setFilterData(mapped);\r\n    }\r\n  }, [MarketPrices]);\r\n\r\n  const [mappedData, setMappedData] = useState<DataType[] | null>(null);\r\n  const [filterData, setFilterData] = useState<DataType[]>([]);\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const loading = useIsFetching();\r\n\r\n  const isLoading = useIsMutating();\r\n  const [form] = Form.useForm();\r\n\r\n  const [showCalendar, setShowCalendar] = useState(false);\r\n\r\n  const [formData, setFormData] = useState<FormData>({\r\n    commodity: \"\",\r\n    previous_price: \"\",\r\n    new_price: \"\",\r\n    effective_date: \"\",\r\n    effective_time: \"\",\r\n    reason_for_change: \"\",\r\n    tags: [],\r\n    name: \"\",\r\n  });\r\n\r\n  const handleEyeClick = (record: DataType) => {\r\n    setConfiguration(record);\r\n    setIsOpen(true);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const showPopconfirm = (record: DataType) => {\r\n    setConfiguration(record);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setOpen(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    if (configuration) {\r\n      setOpen(false);\r\n      Delete(configuration?._id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (configuration) {\r\n      form.setFieldsValue({\r\n        commodity: configuration?.commodity?.name,\r\n        previous_price: configuration?.new_price,\r\n      });\r\n    }\r\n  }, [configuration, form]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleDateChange = (\r\n    date: Dayjs | null,\r\n    dateString: string | string[]\r\n  ) => {\r\n    if (dateString) {\r\n      const filteredData = mappedData?.filter(\r\n        (item: DataType) => item.effective_date === dateString\r\n      );\r\n      setFilterData(filteredData || []);\r\n    } else {\r\n      setFilterData([]);\r\n    }\r\n    setShowCalendar(false);\r\n  };\r\n\r\n  const handleDateInput = (\r\n    value: DatePickerProps[\"value\"],\r\n    dateString: string | string[]\r\n  ) => {\r\n    if (typeof dateString === \"string\") {\r\n      setFormData({\r\n        ...formData,\r\n        effective_date: dateString ? dateString : \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleTimeChange = (\r\n    value: TimePickerProps[\"value\"],\r\n    timeString: string | string[]\r\n  ) => {\r\n    if (typeof timeString === \"string\") {\r\n      setFormData({\r\n        ...formData,\r\n        effective_time: timeString ? timeString : \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const [tableProps, setTableProps] = useState<TablePaginationConfig>({\r\n    pageSize: 5,\r\n  });\r\n\r\n  const onChange: TableProps<DataType>[\"onChange\"] = (\r\n    pagination,\r\n    filters,\r\n    sorter,\r\n    extra\r\n  ) => {\r\n    setTableProps(pagination);\r\n  };\r\n\r\n  const columns: TableColumnsType<DataType> = [\r\n    {\r\n      title: \"S/N\",\r\n      dataIndex: \"number\",\r\n      width: 80,\r\n      key: \"number\",\r\n      align: \"center\",\r\n      render: (text, record, index) => {\r\n        const pageNumber = tableProps.current || 1;\r\n        const pageSize = tableProps.pageSize || 5;\r\n        return (pageNumber - 1) * pageSize + index + 1;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Commodity\",\r\n      dataIndex: \"commodity\",\r\n      align: \"left\",\r\n      key: \"name\",\r\n      width: 150,\r\n      render: (text) => (\r\n        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\r\n          {text?.name || \"\"}\r\n        </div>\r\n      ),\r\n\r\n      filters: mappedData\r\n        ?.map((c: any) => c?.commodity?.name)\r\n        .filter(\r\n          (value: string, index: number, self: string[]) =>\r\n            self.indexOf(value) === index\r\n        )\r\n        .map((name: string) => ({\r\n          text: name,\r\n          value: name,\r\n        })),\r\n\r\n      filterMode: \"menu\",\r\n      filterSearch: true,\r\n      onFilter: (value: React.Key | boolean, record: DataType) => {\r\n        if (typeof value === \"string\") {\r\n          return record?.commodity?.name.includes(value);\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      title: \"Previous Price\",\r\n      dataIndex: \"previous_price\",\r\n      align: \"left\",\r\n      key: \"previous_price\",\r\n      width: 150,\r\n      render: (text) => (\r\n        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\r\n          {text?.toLocaleString()}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Current Price\",\r\n      dataIndex: \"new_price\",\r\n      align: \"left\",\r\n      key: \"current_price\",\r\n      width: 150,\r\n      render: (text) => (\r\n        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\r\n          {text?.toLocaleString()}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Effective Date\",\r\n      dataIndex: \"effective_date\",\r\n      align: \"left\",\r\n      width: 150,\r\n      key: \"effective_date\",\r\n      render: (text) => (\r\n        <div style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}>\r\n          {text}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Effective Time\",\r\n      dataIndex: \"effective_time\",\r\n      align: \"left\",\r\n      key: \"effective_time\",\r\n      width: 150,\r\n      render: (text) => {\r\n        const [hours, minutes] = text?.split(\":\");\r\n        const hourNumber = Number(hours);\r\n        const formattedTime = `${\r\n          hourNumber > 12 ? hourNumber - 12 : hourNumber\r\n        }:${minutes} ${hourNumber >= 12 ? \"PM\" : \"AM\"}`;\r\n\r\n        return (\r\n          <div\r\n            style={{ height: \"40px\", display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            {formattedTime}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      align: \"left\",\r\n      key: \"status\",\r\n      width: 150,\r\n      render: (status) => {\r\n        let color;\r\n        if (status === \"Pending\") {\r\n          color = \"red\";\r\n        } else if (status === \"Completed\") {\r\n          color = \"green\";\r\n        } else {\r\n          color = \"red\";\r\n        }\r\n        return <Tag color={color}>{status.toUpperCase()}</Tag>;\r\n      },\r\n      filters: [\r\n        {\r\n          text: \"Pending\",\r\n          value: \"Pending\",\r\n        },\r\n        {\r\n          text: \"Completed\",\r\n          value: \"Completed\",\r\n        },\r\n      ],\r\n\r\n      filterMode: \"menu\",\r\n\r\n      onFilter: (value: React.Key | boolean, record: DataType) => {\r\n        if (typeof value === \"string\") {\r\n          return record.status === value;\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      dataIndex: \"actions\",\r\n      align: \"left\",\r\n      key: \"action\",\r\n      width: 150,\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <img\r\n            src={eye}\r\n            alt=\"View\"\r\n            style={{ width: \"20px\", cursor: \"pointer\" }}\r\n            onClick={() => handleEyeClick(record)}\r\n          />\r\n          <img\r\n            src={trash}\r\n            alt=\"Delete\"\r\n            style={{ width: \"20px\", cursor: \"pointer\" }}\r\n            onClick={() => showPopconfirm(record)}\r\n          />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleClose = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    const {\r\n      previous_price,\r\n      new_price,\r\n      effective_date,\r\n      effective_time,\r\n\r\n      reason_for_change,\r\n    } = formData;\r\n    const data = new FormData();\r\n    data.append(\"commodity\", configuration?._id);\r\n    data.append(\"previous_price\", configuration?.previous_price);\r\n    data.append(\"new_price\", new_price);\r\n    data.append(\"effective_date\", effective_date);\r\n    data.append(\"effective_time\", effective_time);\r\n    data.append(\"reason_for_change\", reason_for_change);\r\n    await mutate(data as any);\r\n    successAlert(\"commodity Updated Successfully\");\r\n    handleClose();\r\n    form.resetFields();\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex gap-4 mb-4 mt-4\">\r\n        <button\r\n          onClick={() => setShowCalendar(!showCalendar)}\r\n          className=\"relative flex items-center justify-center gap-2 bg-[#658127] bg-opacity-10 rounded-md py-2 px-4\"\r\n        >\r\n          <p className=\"text-[#658127] text-[16px] font-medium\">\r\n            Price history\r\n          </p>\r\n          <span className=\"w-6 h-6 flex items-center justify-center\">\r\n            <svg\r\n              width=\"10\"\r\n              height=\"6\"\r\n              className={`transform ${showCalendar ? \"rotate-180\" : \"\"}`}\r\n              viewBox=\"0 0 10 6\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M4.99984 5.99975L0.756836 1.75775L2.17184 0.34375L4.99984 3.17175L7.82784 0.34375L9.24284 1.75775L4.99984 6.00075V5.99975Z\"\r\n                fill=\"#658127\"\r\n              />\r\n            </svg>\r\n          </span>\r\n        </button>\r\n        <button\r\n          style={{\r\n            outline: \"1px solid #658127\",\r\n            padding: \"0.5rem 1rem\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n          onClick={() => setFilterData(mappedData || [])}\r\n        >\r\n          Reset Filter\r\n        </button>\r\n      </div>\r\n      {showCalendar && (\r\n        <>\r\n          <DatePicker\r\n            open={showCalendar}\r\n            onChange={handleDateChange}\r\n            className=\"border-gray-300 rounded-none\"\r\n            name=\"effective_date\"\r\n            style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <div style={{ overflowX: \"auto\" }}>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={filterData}\r\n          size=\"middle\"\r\n          rowKey=\"_id\"\r\n          loading={!!loading}\r\n          onChange={onChange}\r\n          pagination={{\r\n            pageSizeOptions: [\"5\", \"10\", \"15\"],\r\n            defaultPageSize: 5,\r\n            showSizeChanger: false,\r\n          }}\r\n        />\r\n\r\n        {modalVisible && (\r\n          <div className=\"fixed inset-0 flex items-end justify-end bg-black bg-opacity-50 z-10\">\r\n            <div className=\"bg-white p-12 rounded-md w-[400px] h-screen relative\">\r\n              <CloseOutlined\r\n                className=\"absolute text-[12px] top-16 right-8 cursor-pointer\"\r\n                onClick={handleClose}\r\n              />\r\n              <h2 className=\"mb-14 font-inter font-medium text-xl\">\r\n                Price Configuration\r\n              </h2>\r\n              <Form\r\n                name=\"configuration-form\"\r\n                className=\"bg-white w-full\"\r\n                form={form}\r\n                onFinish={mutate}\r\n                requiredMark={false}\r\n                variant=\"borderless\"\r\n                layout=\"vertical\"\r\n                size=\"middle\"\r\n                scrollToFirstError={true}\r\n              >\r\n                <Form.Item\r\n                  name=\"commodity\"\r\n                  label=\"Commodity\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input a Commodity\" },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    readOnly\r\n                    className=\"border-gray-300 rounded-none\"\r\n                    style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"previous_price\"\r\n                  label=\"Previous Price\"\r\n                  rules={[{ required: true, message: \"Please input a price\" }]}\r\n                >\r\n                  <Input\r\n                    onChange={handleInputChange}\r\n                    className=\"border-gray-300 rounded-none\"\r\n                    name=\"previous_price\"\r\n                    readOnly\r\n                    style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"new_price\"\r\n                  label=\"New Price\"\r\n                  rules={[{ required: true, message: \"Please input a price\" }]}\r\n                >\r\n                  <Input\r\n                    onChange={handleInputChange}\r\n                    className=\"border-gray-300 rounded-none\"\r\n                    name=\"new_price\"\r\n                    style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <div className=\"flex\">\r\n                  <Form.Item\r\n                    name=\"effective_date\"\r\n                    label=\"Effective Date\"\r\n                    rules={[\r\n                      { required: true, message: \"Please select a date\" },\r\n                    ]}\r\n                  >\r\n                    <DatePicker\r\n                      onChange={handleDateInput}\r\n                      className=\"border-gray-300 rounded-none\"\r\n                      name=\"effective_date\"\r\n                      style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    name=\"effective_time\"\r\n                    label=\"Effective Time\"\r\n                    className=\"ml-8\"\r\n                    rules={[\r\n                      { required: true, message: \"Please select a time\" },\r\n                    ]}\r\n                  >\r\n                    <TimePicker\r\n                      type=\"time\"\r\n                      onChange={handleTimeChange}\r\n                      className=\"border-gray-300 rounded-none \"\r\n                      name=\"effective_time\"\r\n                      style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n                    />\r\n                  </Form.Item>\r\n                </div>\r\n\r\n                <Form.Item\r\n                  name=\"reason_for_change\"\r\n                  label=\"Reason for change\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input a reason for change\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    onChange={handleInputChange}\r\n                    className=\"border-gray-300 rounded-none\"\r\n                    name=\"reason_for_change\"\r\n                    style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <div className=\"text-left\">\r\n                  <Form.Item>\r\n                    <Button\r\n                      onClick={handleSubmit}\r\n                      name=\"submit\"\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\" w-40rounded bg-blue-500 hover:text-black hover:bg-white text-sm\"\r\n                      style={{\r\n                        background:\r\n                          \"linear-gradient(89.46deg, #39462D 13.05%, #658127 107.23%)\",\r\n                        color: \"white\",\r\n                      }}\r\n                      loading={isLoading > 0}\r\n                    >\r\n                      Revert{\" \"}\r\n                    </Button>\r\n                  </Form.Item>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <Modal\r\n          title=\"Are you sure?\"\r\n          open={open}\r\n          onOk={handleOk}\r\n          okButtonProps={{\r\n            loading: confirmLoading,\r\n            className: \"!bg-[#39462D]\",\r\n          }}\r\n          onCancel={handleCancel}\r\n          width={400}\r\n          centered\r\n        >\r\n          <div className=\"mt-5 \">\r\n            <p className=\"mb-4\">\r\n              {\" \"}\r\n              Do you want to delete commodity{\" \"}\r\n              <span style={{ fontWeight: \"bold\" }}>\r\n                {configuration?.commodity?.name}?\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport commodityIcon from \"../../../../assets/icon-park-outline_change.png\";\r\nimport commodityIcon2 from \"../../../../assets/ic_outline-pending.png\";\r\nimport commodityIcon3 from \"../../../../assets/ic_outline-pending.png\";\r\nimport clock from \"../../../../assets/mingcute_time-line.png\";\r\nimport calendar from \"../../../../assets/bx_calendar.png\";\r\nimport weather from \"../../../../assets/fluent_weather-haze-24-filled.png\";\r\nimport { Card, Col, Row } from \"antd\";\r\nimport Calendars from \"../../../../components/Calendar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TableComponent from \"./TableComponent\";\r\nimport { useGetRegisteredUsers } from \"../../../../hooks/auth\";\r\nimport { DataContext } from \"../../../../context/DataContext\";\r\nimport { useGetConfiguration } from \"../../hooks\";\r\n\r\nconst DashboardPage = () => {\r\n  const allUsers = useGetRegisteredUsers();\r\n  const Users = allUsers?.totalUsers;\r\n  const { publicCommodities } = useContext(DataContext);\r\n  const { data: MarketPrices } = useGetConfiguration();\r\n  const PendingPrices = MarketPrices?.filter(\r\n    (item: any) => item?.status === \"Pending\"\r\n  );\r\n  const blocksData = [\r\n    {\r\n      title: \"Total Manual Updated Commodity\",\r\n      value: publicCommodities?.length || 0,\r\n      path: \"/app/configuration/commodity\",\r\n    },\r\n    {\r\n      title: \"Pending Price\",\r\n      text: \"Update\",\r\n      value: PendingPrices?.length || 0,\r\n    },\r\n    {\r\n      title: \"No of Registered\",\r\n      text: \"Users\",\r\n      value: Users?.length || 0,\r\n      path: \"/app/users\",\r\n    },\r\n  ];\r\n  const backgroundColorClasses = [\r\n    \"bg-[#31859F] border-solid border-4 border-[rgba(49, 133, 159, 0.31)]\",\r\n    \"bg-[#E36C29] border-solid border-4 border-[rgba(227, 108, 41, 0.31)]\",\r\n    \"bg-[#319F43] border-solid border-4 border-[rgba(227, 108, 41, 0.31)]\",\r\n  ];\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  const icons = [commodityIcon, commodityIcon2, commodityIcon3];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-9\">\r\n        <Row gutter={8} className=\"flex gap-8\">\r\n          <Col xs={24} sm={24} md={14} lg={14} className=\"lg:basis-[100%]\">\r\n            <Row gutter={24} className=\"gap-4 sm:gap-0\">\r\n              {blocksData.map((block, index) => (\r\n                <Col key={index} xs={24} sm={12} md={8} lg={8}>\r\n                  <Link to={(blocksData[index] as { path: string }).path}>\r\n                    <Card className=\"bg-white rounded-md shadow-md gap-4\">\r\n                      <div className=\"flex flex-row items-center justify-between\">\r\n                        <div className=\"flex flex-col\">\r\n                          <div className=\"text-sm font-normal\">\r\n                            {block.title}\r\n                          </div>\r\n                          <div className=\"text-sm font-normal mt-1\">\r\n                            {block.text}\r\n                          </div>\r\n                          <div className=\"text-2xl font-bold mt-4\">\r\n                            {block.value}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          className={`flex items-center justify-center rounded-full  ${backgroundColorClasses[index]}`}\r\n                        >\r\n                          <img\r\n                            className=\"\"\r\n                            src={icons[index]}\r\n                            alt=\"commodity\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </Card>\r\n                  </Link>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            <Row gutter={24} className=\"mt-8 gap-4 sm:gap-0\">\r\n              <Col xs={24} sm={24} md={24} lg={24}>\r\n                <section className=\"bg-white rounded-md shadow-md p-4 lg:items-center justify-between flex flex-col md:flex-row lg:px-10\">\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <img\r\n                      className=\"w-10 md:w-10 lg:w-10\"\r\n                      src={weather}\r\n                      alt=\"\"\r\n                    />\r\n                    <div>\r\n                      <div className=\"text-sm lg:text-2xl font-semibold\">\r\n                        28&deg;\r\n                      </div>\r\n                      <div className=\"text-sm lg:text-md\">\r\n                        Feels like 35&deg;\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"hidden md:block\">|</div>\r\n\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <img\r\n                      className=\"w-10 md:w-10 lg:w-10\"\r\n                      src={clock}\r\n                      alt=\"clock\"\r\n                    />\r\n                    <div className=\"text-sm lg:text-md\">\r\n                      {/* {currentTime.toLocaleTimeString()} */}\r\n                      {currentTime.toLocaleTimeString([], {\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"hidden font-bold h-full md:block\">|</div>\r\n\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <img\r\n                      className=\"w-10 md:w-10 lg:w-10\"\r\n                      src={calendar}\r\n                      alt=\"Calendar\"\r\n                    />\r\n                    <div className=\"text-sm lg:text-md\">\r\n                      {new Date().toLocaleDateString(\"en-US\", {\r\n                        weekday: \"long\",\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"numeric\",\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col xs={24} sm={24} md={9} lg={9}>\r\n            <Calendars />\r\n          </Col>\r\n        </Row>\r\n        <TableComponent />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import AdminLayout from \"../../layout/Admins\";\r\nimport DashboardPage from \"./Dashboard/components/DashboardPage\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <AdminLayout pageTitle=\"Dashboard\">\r\n      <DashboardPage />\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["onPanelChange","value","mode","Calendars","token","theme","useToken","wrapperStyle","width","maxWidth","border","concat","colorBorderSecondary","borderRadius","borderRadiusLG","_jsx","style","children","Calendar","fullscreen","TableComponent","_configuration$commod2","confirmLoading","setConfirmLoading","React","configuration","setConfiguration","mutate","useUpdateCommodityPrice","_id","Delete","useDeleteConfiguration","data","MarketPrices","useGetConfiguration","mapped","map","item","index","setMappedData","setFilterData","mappedData","useState","filterData","modalVisible","setModalVisible","open","setOpen","isOpen","setIsOpen","loading","useIsFetching","isLoading","useIsMutating","form","Form","useForm","showCalendar","setShowCalendar","formData","setFormData","commodity","previous_price","new_price","effective_date","effective_time","reason_for_change","tags","name","useEffect","_configuration$commod","setFieldsValue","handleInputChange","e","target","tableProps","setTableProps","pageSize","columns","title","dataIndex","key","align","render","text","record","current","height","display","alignItems","filters","c","_c$commodity","filter","self","indexOf","filterMode","filterSearch","onFilter","_record$commodity","includes","toLocaleString","hours","minutes","split","hourNumber","Number","formattedTime","status","color","Tag","toUpperCase","_","_jsxs","Space","size","src","eye","alt","cursor","onClick","handleEyeClick","trash","showPopconfirm","handleClose","className","viewBox","fill","xmlns","d","outline","padding","_Fragment","DatePicker","onChange","handleDateChange","date","dateString","filteredData","backgroundColor","marginTop","overflowX","Table","dataSource","rowKey","pagination","sorter","extra","pageSizeOptions","defaultPageSize","showSizeChanger","CloseOutlined","onFinish","requiredMark","variant","layout","scrollToFirstError","Item","label","rules","required","message","Input","readOnly","handleDateInput","TimePicker","type","handleTimeChange","timeString","Button","async","FormData","append","successAlert","resetFields","htmlType","background","Modal","onOk","handleOk","setTimeout","okButtonProps","onCancel","handleCancel","centered","fontWeight","DashboardPage","allUsers","useGetRegisteredUsers","Users","totalUsers","publicCommodities","useContext","DataContext","PendingPrices","blocksData","length","path","backgroundColorClasses","currentTime","setCurrentTime","Date","timer","setInterval","clearInterval","icons","commodityIcon2","commodityIcon3","Row","gutter","Col","xs","sm","md","lg","block","Link","to","Card","clock","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","year","month","day","Dashboard","AdminLayout","pageTitle"],"sourceRoot":""}