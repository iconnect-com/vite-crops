{"version":3,"file":"static/js/5089.2fe20e99.chunk.js","mappings":"mRASA,MAoGA,EApGcA,KACZ,MAAM,OAAEC,EAAM,UAAEC,EAAS,MAAEC,IAAUC,EAAAA,EAAAA,MAC/BC,GAAYC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAKC,UAOpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CAAAC,UACfF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6CAA4CD,UACzDE,EAAAA,EAAAA,MAACN,EAAAA,EAAI,CACHO,KAAK,cACLR,KAAMA,EACNS,QAAQ,aACRC,OAAO,WACPC,SAAUjB,EACVY,UAAU,wBAAuBD,SAAA,EAEjCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,GAAED,UACfF,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAG,IAAGR,UACVF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAYQ,IAAKC,EAAQC,IAAI,uBAIhDT,EAAAA,EAAAA,MAAA,OAAKD,UAAU,0CAAyCD,SAAA,CAAC,gBACzC,QAEhBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,sCAAqCD,SAAA,CAAC,gBACrC,QAGhBF,EAAAA,EAAAA,KAACF,EAAAA,EAAKgB,KAAI,CACRT,KAAK,QACLU,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,6BACnCC,MAAM,QAAOhB,UAEbF,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACJhB,UAAU,+BACVE,KAAK,QACLe,MAAO,CAAEC,gBAAiB,UAAWC,UAAW,cAIpDtB,EAAAA,EAAAA,KAACF,EAAAA,EAAKgB,KAAI,CACRT,KAAK,WACLU,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCACnCC,MAAM,WAAUhB,UAEhBF,EAAAA,EAAAA,KAACmB,EAAAA,EAAMI,SAAQ,CACbpB,UAAU,+BACVE,KAAK,WACLe,MAAO,CAAEC,gBAAiB,UAAWC,UAAW,cAIpDlB,EAAAA,EAAAA,MAACoB,EAAAA,GAAM,CACLC,QAtDYC,IACpBA,EAAEC,iBACF9B,EAAK+B,QAAQ,EAqDLC,KAAK,UACLC,SAAS,SACT3B,UAAU,0EACViB,MAAO,CACLW,WACE,6DACFC,MAAO,SAETC,QAAStC,EAAY,EAAEO,SAAA,CACxB,QACO,QASRF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4DAA2DD,UACxEE,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CACHC,GAAG,wBACHP,UAAU,0DAAyDD,SAAA,CACpE,mBACkB,eAYR,C,mLCjGhB,MAAMD,EAAmBiC,IAA0B,IAAzB,SAAEhC,GAAiBgC,EAClD,MAAOC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,GACrDC,EAAS,CAACC,EAAKC,IAErBC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaC,aAAY,KAC7BP,GAAsBD,EAAoB,GAAKG,EAAOM,OAAO,GAC5D,KAEH,MAAO,IAAMC,cAAcH,EAAW,GAErC,CAACP,IAEJ,MAAOW,EAAeC,IAAoBV,EAAAA,EAAAA,UAASW,OAAOC,WAAa,KAYvE,OAXAR,EAAAA,EAAAA,YAAU,KACR,MAAMS,EAAeA,KACnBH,EAAiBC,OAAOC,WAAa,IAAI,EAI3C,OADAD,OAAOG,iBAAiB,SAAUD,GAC3B,KACLF,OAAOI,oBAAoB,SAAUF,EAAa,CACnD,GACA,KAGD9C,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oBAAmBD,SAAA,CAC/BA,EACA4C,IACC9C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kCAAiCD,UAC9CF,EAAAA,EAAAA,KAAA,OACEW,IAAK2B,EAAOH,GACZtB,IAAI,aACJV,UAAU,oDAIZ,C","sources":["modules/Auth/Admin/Login.tsx","modules/Auth/Admin/components/AuthWrapperAdmin.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useLogin } from \"../../../hooks/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport nirsal from \"../../../assets/download.jpeg\";\r\nimport { useIsMutating } from \"@tanstack/react-query\";\r\nimport { AuthWrapperAdmin } from \"./components/AuthWrapperAdmin\";\r\n// import { GoogleLogin } from 'react-google-login';\r\n\r\nconst Login = () => {\r\n  const { mutate, isSuccess, reset } = useLogin();\r\n  const isLoading = useIsMutating();\r\n  const [form] = Form.useForm();\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    form.submit();\r\n  };\r\n\r\n  return (\r\n    <AuthWrapperAdmin>\r\n      <div className=\"flex items-center justify-center w-[450px]\">\r\n        <Form\r\n          name=\"Admin login\"\r\n          form={form}\r\n          variant=\"borderless\"\r\n          layout=\"vertical\"\r\n          onFinish={mutate}\r\n          className=\"bg-white p-10  w-full\"\r\n        >\r\n          <div className=\"\">\r\n            <Link to=\"/\">\r\n              <img className=\"h-12 w-17\" src={nirsal} alt=\"ChitChat Logo\" />\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"text-2xl mt-8 mb-1 font-bold text-black\">\r\n            Welcome back!{\" \"}\r\n          </div>\r\n          <div className=\"text-sm mb-5 font-medium text-black\">\r\n            We missed you{\" \"}\r\n          </div>\r\n\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n            label=\"Email\"\r\n          >\r\n            <Input\r\n              className=\"border-gray-300 rounded-none\"\r\n              name=\"email\"\r\n              style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n            label=\"Password\"\r\n          >\r\n            <Input.Password\r\n              className=\"border-gray-300 rounded-none\"\r\n              name=\"password\"\r\n              style={{ backgroundColor: \"#EBE9E9\", marginTop: \"-2rem\" }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Button\r\n            onClick={handleSubmit}\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"w-full h-10 rounded bg-blue-500 hover:text-black hover:bg-white text-sm\"\r\n            style={{\r\n              background:\r\n                \"linear-gradient(89.46deg, #39462D 13.05%, #658127 107.23%)\",\r\n              color: \"white\",\r\n            }}\r\n            loading={isLoading > 0}\r\n          >\r\n            Login{\" \"}\r\n          </Button>\r\n\r\n          {/* <div className=\"mt-5 flex items-center mb-8\">\r\n            <div className=\"border-t border-gray-500 flex-grow mr-3\"></div>\r\n            <span className=\"text-sm text-gray-500\">Or register with</span>\r\n            <div className=\"border-t border-gray-500 flex-grow ml-3\"></div>\r\n          </div> */}\r\n\r\n          <div className=\"border-l-gray-500 border-gray-400 flex gap-1 items-center\">\r\n            <Link\r\n              to=\"/admin/reset-password\"\r\n              className=\"mt-10 text-green-900 text-sm font-bold hover:text-black\"\r\n            >\r\n              Forget Password?{\" \"}\r\n            </Link>\r\n          </div>\r\n\r\n          {/* <Link to=\"\">\r\n            <div className=\"w-full h-10 flex items-center justify-center shadow-sm border border-gray-200 rounded hover:bg-gray-200\">\r\n              <img src={googleIcon} alt=\"Google\" className=\"h-6 w-6\" />\r\n              <span className=\"ml-2 text-black text-sm\">Google</span>\r\n            </div>\r\n          </Link> */}\r\n        </Form>\r\n      </div>\r\n    </AuthWrapperAdmin>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { ReactNode, useEffect, useState } from \"react\";\r\nimport bg1 from \"../../../../assets/Frame-1.png\";\r\nimport bg2 from \"../../../../assets/Frame-2.png\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const AuthWrapperAdmin = ({ children }: Props) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const images = [bg1, bg2];\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentImageIndex((currentImageIndex + 1) % images.length);\r\n    }, 30000);\r\n\r\n    return () => clearInterval(intervalId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentImageIndex]);\r\n\r\n  const [isLargeScreen, setIsLargeScreen] = useState(window.innerWidth > 768);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsLargeScreen(window.innerWidth > 560);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex\">\r\n      {children}\r\n      {isLargeScreen && (\r\n        <div className=\"flex-1 relative hidden md:block\">\r\n          <img\r\n            src={images[currentImageIndex]}\r\n            alt=\"Background\"\r\n            className=\"absolute inset-0 w-full h-full object-cover\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["Login","mutate","isSuccess","reset","useLogin","isLoading","useIsMutating","form","Form","useForm","_jsx","AuthWrapperAdmin","children","className","_jsxs","name","variant","layout","onFinish","Link","to","src","nirsal","alt","Item","rules","required","message","label","Input","style","backgroundColor","marginTop","Password","Button","onClick","e","preventDefault","submit","type","htmlType","background","color","loading","_ref","currentImageIndex","setCurrentImageIndex","useState","images","bg1","bg2","useEffect","intervalId","setInterval","length","clearInterval","isLargeScreen","setIsLargeScreen","window","innerWidth","handleResize","addEventListener","removeEventListener"],"sourceRoot":""}